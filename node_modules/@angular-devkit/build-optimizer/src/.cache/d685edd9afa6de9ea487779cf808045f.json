{"remainingRequest":"E:\\MouseFront\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!E:\\MouseFront\\node_modules\\angular2-social-login\\dist\\auth.service.js","dependencies":[{"path":"E:\\MouseFront\\node_modules\\angular2-social-login\\dist\\auth.service.js","mtime":1531122753974},{"path":"E:\\MouseFront\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1531122754924},{"path":"E:\\MouseFront\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1531122748351}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs/Observable\";\nvar AuthService = /*@__PURE__*/ (function () {\n    function AuthService() {\n    }\n    AuthService.prototype.login = function (provider) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            switch (provider) {\n                case \"google\":\n                    if (typeof (_this.gauth) == \"undefined\") {\n                        _this.gauth = gapi.auth2.getAuthInstance();\n                    }\n                    if (!_this.gauth.isSignedIn.get()) {\n                        _this.gauth.signIn().then(function () {\n                            localStorage.setItem('_login_provider', 'google');\n                            observer.next(_this._fetchGoogleUserDetails());\n                            observer.complete();\n                        });\n                    }\n                    else {\n                        localStorage.setItem('_login_provider', 'google');\n                        observer.next(_this._fetchGoogleUserDetails());\n                        observer.complete();\n                    }\n                    break;\n                case \"facebook\":\n                    FB.getLoginStatus(function (response) {\n                        if (response.status === \"connected\") {\n                            FB.api('/me?fields=name,email,picture', function (res) {\n                                if (!res || res.error) {\n                                    observer.error(res.error);\n                                }\n                                else {\n                                    var userDetails = {\n                                        name: res.name,\n                                        email: res.email,\n                                        uid: res.id,\n                                        provider: \"facebook\",\n                                        image: res.picture.data.url,\n                                        token: response.authResponse.accessToken\n                                    };\n                                    localStorage.setItem('_login_provider', 'facebook');\n                                    observer.next(userDetails);\n                                    observer.complete();\n                                }\n                            });\n                        }\n                        else {\n                            FB.login(function (response) {\n                                if (response.status === \"connected\") {\n                                    FB.api('/me?fields=name,email,picture', function (res) {\n                                        if (!res || res.error) {\n                                            observer.error(res.error);\n                                        }\n                                        else {\n                                            var userDetails = {\n                                                name: res.name,\n                                                email: res.email,\n                                                uid: res.id,\n                                                provider: \"facebook\",\n                                                image: res.picture.data.url,\n                                                token: response.authResponse.accessToken\n                                            };\n                                            localStorage.setItem('_login_provider', 'facebook');\n                                            observer.next(userDetails);\n                                            observer.complete();\n                                        }\n                                    });\n                                }\n                            }, { scope: 'email', auth_type: \"rerequest\" });\n                        }\n                    });\n                    break;\n                case \"linkedin\":\n                    IN.User.authorize(function () {\n                        IN.API.Raw(\"/people/~:(id,first-name,last-name,email-address,picture-url)\").result(function (res) {\n                            var userDetails = { name: res.firstName + \" \" + res.lastName, email: res.emailAddress, uid: res.id, provider: \"linkedIN\", image: res.pictureUrl };\n                            localStorage.setItem('_login_provider', 'linkedin');\n                            observer.next(userDetails);\n                            observer.complete();\n                        });\n                    });\n                    break;\n            }\n        });\n    };\n    AuthService.prototype.logout = function () {\n        var provider = localStorage.getItem(\"_login_provider\");\n        return Observable.create(function (observer) {\n            switch (provider) {\n                case \"google\":\n                    var gElement = document.getElementById(\"gSignout\");\n                    if (typeof (gElement) != 'undefined' && gElement != null) {\n                        gElement.remove();\n                    }\n                    var d = document, gSignout = void 0;\n                    var ref = d.getElementsByTagName('script')[0];\n                    gSignout = d.createElement('script');\n                    gSignout.src = \"https://accounts.google.com/Logout\";\n                    gSignout.type = \"text/html\";\n                    gSignout.id = \"gSignout\";\n                    localStorage.removeItem('_login_provider');\n                    observer.next(true);\n                    observer.complete();\n                    ref.parentNode.insertBefore(gSignout, ref);\n                    break;\n                case \"facebook\":\n                    FB.logout(function (res) {\n                        localStorage.removeItem('_login_provider');\n                        observer.next(true);\n                        observer.complete();\n                    });\n                    break;\n                case \"linkedin\":\n                    IN.User.logout(function () {\n                        localStorage.removeItem('_login_provider');\n                        observer.next(true);\n                        observer.complete();\n                    }, {});\n                    break;\n            }\n        });\n    };\n    AuthService.prototype._fetchGoogleUserDetails = function () {\n        var currentUser = this.gauth.currentUser.get();\n        var profile = currentUser.getBasicProfile();\n        var idToken = currentUser.getAuthResponse().id_token;\n        var accessToken = currentUser.getAuthResponse().access_token;\n        return {\n            token: accessToken,\n            idToken: idToken,\n            uid: profile.getId(),\n            name: profile.getName(),\n            email: profile.getEmail(),\n            image: profile.getImageUrl(),\n            provider: \"google\"\n        };\n    };\n    return AuthService;\n}());\nexport { AuthService };\n//# sourceMappingURL=auth.service.js.map \n",null]}